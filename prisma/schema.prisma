generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model JobPositions {
  jobPositionID Int    @id @default(autoincrement())
  positionName  String @db.VarChar(15)
  minSalary     Float? @db.Float
  maxSalary     Float? @db.Float
  Workers       Workers[]
}

model Teams {
  teamID   Int       @id @default(autoincrement())
  teamName String?   @db.VarChar(20)
  address  String?   @db.VarChar(20)
  Workers  Workers[]
}

model Bosses{
  workerID   Int        @id
  surname       String?   @db.VarChar(15)
  name          String?   @db.VarChar(20)
  Workers   Workers[]
}

model Workers {
  workerID      Int       @id @default(autoincrement())
  surname       String?   @db.VarChar(15)
  name          String?   @db.VarChar(20)
  jobPositionID Int?
  bossID        Int?
  isBoss        Boolean?  @default(false)
  employedSince DateTime? @db.Date
  baseSalary    Float?    @db.Float
  bonusSalary   Float?    @db.Float
  teamID        Int?
  Teams         Teams?    @relation(fields: [teamID], references: [teamID], onDelete: Restrict, onUpdate: Restrict, map: "FK_Workers_Teams")
  JobPositions  JobPositions?    @relation(fields: [jobPositionID], references: [jobPositionID], onDelete: Restrict, onUpdate: Restrict, map: "FK_Workers_JobPositions")
  Bosses  Bosses?    @relation(fields: [bossID], references: [workerID], onDelete: Restrict, onUpdate: Restrict, map: "FK_Workers_Bosses")

  @@index([teamID], map: "FK_Workers_Teams")
  @@index([bossID], map: "FK_Workers_Bosses")
  @@index([jobPositionID], map: "FK_Workers_JobPositions")
}
